import { Slide } from '../../types/Slide';

interface KSSSlide extends Slide {
  type: 'text' | 'imageLeft' | 'imageRight' | 'fullBleed';
}

export const kssSlides: KSSSlide[] = [
  // Title Slide - Full bleed for dramatic opening
  {
    type: 'fullBleed',
    title: 'Make AI Tools Behave',
    body: 'Practical Rules for Cursor ‚Ä¢ Windsurf ‚Ä¢ Warp ‚Ä¢ Gemini CLI\n\n60-minute hands-on session\nTransform unpredictable AI into policy-compliant assistants',
    image: {
      src: 'https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=1920&h=1080&fit=crop&crop=entropy',
      alt: 'AI and technology concept with neural networks and code',
      aspect: 'wide'
    }
  },

  // Problem Statement - Image left with frustrated developer
  {
    type: 'imageLeft',
    title: 'The AI Chaos Problem',
    body: 'Sound familiar?\n\n‚Ä¢ AI suggests outdated patterns you migrated away from\n‚Ä¢ Ignores your team\'s coding standards and conventions\n‚Ä¢ Generates code that fails your quality gates\n‚Ä¢ Inconsistent behavior across different developers\n\nResult: More time fixing AI output than writing code yourself.',
    image: {
      src: 'https://images.unsplash.com/photo-1551650975-87deedd944c3?w=800&h=450&fit=crop&crop=entropy',
      alt: 'Frustrated developer looking at messy code on multiple monitors',
      aspect: 'wide'
    }
  },

  // Solution Overview - Text only for focus
  {
    type: 'text',
    title: 'The Solution: Rule Systems',
    body: 'Transform AI from chaotic to compliant with structured rules\n\n‚úì Codify team norms and quality standards\n‚úì Enforce architectural patterns\n‚úì Maintain consistency across all developers\n‚úì Reduce review cycles and technical debt\n\nToday we\'ll implement rules for 4 major AI coding tools'
  },

  // Tool Overview - Image right with tools logos concept
  {
    type: 'imageRight',
    title: 'Tools We\'ll Configure',
    body: 'Each tool has different rule syntax:\n\nüéØ **Cursor**: .cursorrules (MDC syntax)\nüåä **Windsurf**: .windsurfrules (Markdown)\n‚ö° **Warp**: Plain text with workarounds\nüíé **Gemini CLI**: GEMINI.md files\n\nSame principles, different implementations.',
    image: {
      src: 'https://images.unsplash.com/photo-1461749280684-dccba630e2f6?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Collection of modern development tools and code editors',
      aspect: 'square'
    }
  },

  // Cursor Rules - Image left with Cursor interface
  {
    type: 'imageLeft',
    title: 'Cursor: MDC Syntax Rules',
    body: 'Cursor uses .cursorrules files with MDC (Markdown + Components) syntax:\n\n```\n# Project Rules\n- Use TypeScript strict mode\n- Follow React functional patterns\n- No class components\n\n## API Guidelines  \n- Always handle errors with try/catch\n- Use Zod for validation\n```\n\nSupports rich formatting and nested structures.',
    image: {
      src: 'https://images.unsplash.com/photo-1517180102446-f3ece451e9d8?w=800&h=450&fit=crop&crop=entropy',
      alt: 'Modern code editor with TypeScript and React code displayed',
      aspect: 'wide'
    }
  },

  // Windsurf Rules - Image right with clean markdown
  {
    type: 'imageRight', 
    title: 'Windsurf: Markdown Rules',
    body: 'Windsurf uses .windsurfrules with standard Markdown:\n\n```markdown\n# Code Style\n- 2-space indentation\n- Semicolons required\n- Single quotes for strings\n\n# Architecture\n- Feature-based folder structure\n- Separate API and UI concerns\n```\n\nSimple, readable, version-controllable.',
    image: {
      src: 'https://images.unsplash.com/photo-1586717791821-3f44a563fa4c?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Clean markdown document with structured content',
      aspect: 'square'
    }
  },

  // Warp Rules - Image left with terminal
  {
    type: 'imageLeft',
    title: 'Warp: Plain Text Workarounds',
    body: 'Warp doesn\'t have native rule files, so we use creative approaches:\n\n‚Ä¢ **Project README**: Add "AI Assistant Guidelines" section\n‚Ä¢ **Comments in key files**: Embed rule hints\n‚Ä¢ **Alias commands**: Create rule-reminder shortcuts\n\nExample: `alias aicheck="echo \'Remember: Use our error handling patterns\'`\n\nNot perfect, but effective for maintaining consistency.',
    image: {
      src: 'https://images.unsplash.com/photo-1629654297299-c8506221ca97?w=800&h=450&fit=crop&crop=entropy',
      alt: 'Modern terminal with colorful command output and development workflow',
      aspect: 'wide'
    }
  },

  // Gemini CLI - Image right with CLI interface
  {
    type: 'imageRight',
    title: 'Gemini CLI: GEMINI.md Files',
    body: 'Gemini CLI reads GEMINI.md files in your project root:\n\n```markdown\n# Development Context\n\n## Tech Stack\n- Next.js 14 with App Router\n- Tailwind CSS for styling\n- Prisma with PostgreSQL\n\n## Rules\n- Always use server actions\n- Implement proper error boundaries\n```\n\nExcellent for providing project context.',
    image: {
      src: 'https://images.unsplash.com/photo-1518432031352-d6fc5c10da5a?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Command line interface with development commands and file structure',
      aspect: 'square'
    }
  },

  // Before/After Demo - Full bleed for impact
  {
    type: 'fullBleed',
    title: 'Live Demo: Before vs After',
    body: 'Watch the transformation in real-time\n\n‚ùå **Before Rules**: Inconsistent, outdated patterns\n‚úÖ **After Rules**: Clean, compliant, team-standard code\n\nLet\'s see AI behavior change with just a few rule files.',
    image: {
      src: 'https://images.unsplash.com/photo-1551650975-87deedd944c3?w=1920&h=1080&fit=crop&crop=entropy',
      alt: 'Split screen showing messy code transforming into clean organized code',
      aspect: 'wide'
    }
  },

  // Global vs Project Rules - Text only for clarity
  {
    type: 'text',
    title: 'Global vs Project-Specific Rules',
    body: 'Structure your rule hierarchy for maximum effectiveness\n\n**Global Rules** (~/.cursor/rules)\n‚Ä¢ Code style preferences\n‚Ä¢ Security best practices\n‚Ä¢ Personal workflow habits\n\n**Project Rules** (.cursorrules in repo)\n‚Ä¢ Architecture patterns\n‚Ä¢ Tech stack specifics\n‚Ä¢ Team conventions\n\nüí° Project rules override global rules'
  },

  // Best Practices - Image left with team collaboration
  {
    type: 'imageLeft',
    title: 'Rule Writing Best Practices',
    body: '**Be Specific**: "Use functional components" not "write good React"\n\n**Provide Examples**: Show the exact pattern you want\n\n**Explain Why**: Context helps AI make better decisions\n\n**Start Small**: Add rules incrementally as issues arise\n\n**Version Control**: Rules are code‚Äîtrack changes\n\n**Team Alignment**: Review rules like any other code',
    image: {
      src: 'https://images.unsplash.com/photo-1600880292203-757bb62b4baf?w=800&h=450&fit=crop&crop=entropy',
      alt: 'Team of developers collaborating on code standards and best practices',
      aspect: 'wide'
    }
  },

  // Common Patterns - Image right with code patterns
  {
    type: 'imageRight',
    title: 'Copy-Paste Starter Templates',
    body: 'Ready-to-use rule templates for common scenarios:\n\nüèóÔ∏è **Architecture Rules**\n- Folder structure enforcement\n- Import/export patterns\n- Component organization\n\nüîí **Security Rules**\n- API key handling\n- Input validation requirements\n- Authentication patterns\n\nüìè **Code Style Rules**\n- Formatting preferences\n- Naming conventions\n- Comment standards',
    image: {
      src: 'https://images.unsplash.com/photo-1515879218367-8466d910aaa4?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Code templates and patterns displayed on screen with copy-paste icons',
      aspect: 'square'
    }
  },

  // Quality Gates - Image left with CI/CD pipeline
  {
    type: 'imageLeft',
    title: 'Integrating with Quality Gates',
    body: 'Make rules part of your development pipeline:\n\n**Pre-commit Hooks**\n‚Ä¢ Validate rule compliance\n‚Ä¢ Block non-compliant commits\n\n**CI/CD Integration**\n‚Ä¢ Automated rule checking\n‚Ä¢ Generate compliance reports\n\n**Code Review Process**\n‚Ä¢ Rule violation flagging\n‚Ä¢ Automated suggestions\n\n**Metrics & Monitoring**\n‚Ä¢ Track rule adoption\n‚Ä¢ Measure code quality improvements',
    image: {
      src: 'https://images.unsplash.com/photo-1557804506-669a67965ba0?w=800&h=450&fit=crop&crop=entropy',
      alt: 'CI/CD pipeline dashboard with quality gates and automated testing workflows',
      aspect: 'wide'
    }
  },

  // Real-world Examples - Text only for focus
  {
    type: 'text',
    title: 'Real-World Success Stories',
    body: 'üìà **Startup Team (8 devs)**\n‚Ä¢ 60% reduction in code review cycles\n‚Ä¢ Consistent API patterns across all features\n‚Ä¢ New developers onboard 3x faster\n\nüè¢ **Enterprise Team (50+ devs)**\n‚Ä¢ Eliminated legacy pattern usage\n‚Ä¢ Automated security compliance\n‚Ä¢ Reduced technical debt by 40%\n\nüöÄ **Agency (Multiple projects)**\n‚Ä¢ Standardized across client codebases\n‚Ä¢ Faster project delivery\n‚Ä¢ Higher client satisfaction scores'
  },

  // Common Pitfalls - Image right with warning concept
  {
    type: 'imageRight',
    title: 'Avoid These Common Pitfalls',
    body: '‚ö†Ô∏è **Too Many Rules at Once**\nStart with 3-5 critical rules, expand gradually\n\n‚ö†Ô∏è **Vague Instructions**\n"Write clean code" ‚Üí "Use TypeScript interfaces for all API responses"\n\n‚ö†Ô∏è **No Context**\nExplain WHY a rule exists, not just WHAT to do\n\n‚ö†Ô∏è **Set and Forget**\nRules need maintenance as your codebase evolves\n\n‚ö†Ô∏è **Team Misalignment**\nRules should reflect team consensus, not individual preferences',
    image: {
      src: 'https://images.unsplash.com/photo-1621839673705-6617adf9e890?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Warning signs and caution symbols representing common development pitfalls',
      aspect: 'square'
    }
  },

  // Hands-on Workshop - Full bleed for engagement
  {
    type: 'fullBleed',
    title: 'Hands-On Workshop Time',
    body: 'Let\'s build your first rule set together\n\nüõ†Ô∏è **Choose your tool** (Cursor, Windsurf, Warp, or Gemini)\nüìù **Identify 3 pain points** in your current workflow\n‚úçÔ∏è **Write specific rules** to address them\nüß™ **Test with AI** and refine\n\nNext 15 minutes: Create your first .cursorrules file',
    image: {
      src: 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?w=1920&h=1080&fit=crop&crop=entropy',
      alt: 'Hands-on workshop with developers working on laptops and collaborating',
      aspect: 'wide'
    }
  },

  // Next Steps - Image left with roadmap
  {
    type: 'imageLeft',
    title: 'Your 30-Day Rule Implementation Plan',
    body: '**Week 1**: Start with Global Rules\n‚Ä¢ Set up basic code style preferences\n‚Ä¢ Add security baseline rules\n\n**Week 2**: Project-Specific Rules\n‚Ä¢ Document current project patterns\n‚Ä¢ Create architecture enforcement rules\n\n**Week 3**: Team Adoption\n‚Ä¢ Share rules with team\n‚Ä¢ Gather feedback and refine\n\n**Week 4**: Automation & Integration\n‚Ä¢ Add to CI/CD pipeline\n‚Ä¢ Set up compliance monitoring',
    image: {
      src: 'https://images.unsplash.com/photo-1586281380349-632531db7ed4?w=800&h=450&fit=crop&crop=entropy',
      alt: 'Project roadmap and timeline with checkboxes and milestone markers',
      aspect: 'wide'
    }
  },

  // Resources - Image right with documentation
  {
    type: 'imageRight',
    title: 'Resources & Community',
    body: 'üìö **Documentation & Examples**\n‚Ä¢ github.com/ai-rules-examples\n‚Ä¢ Tool-specific rule repositories\n‚Ä¢ Community-contributed patterns\n\nüí¨ **Community Support**\n‚Ä¢ Discord: AI Rules Community\n‚Ä¢ Reddit: r/AIAssistants\n‚Ä¢ Stack Overflow: ai-rules tag\n\nüéØ **Advanced Topics**\n‚Ä¢ Dynamic rule generation\n‚Ä¢ Context-aware rule switching\n‚Ä¢ Rule analytics and optimization',
    image: {
      src: 'https://images.unsplash.com/photo-1481627834876-b7833e8f5570?w=600&h=600&fit=crop&crop=entropy',
      alt: 'Open books, documentation, and learning resources spread on a desk',
      aspect: 'square'
    }
  },

  // Closing - Full bleed for strong finish
  {
    type: 'fullBleed',
    title: 'Transform Your AI Workflow Today',
    body: 'From chaos to compliance in just a few rule files\n\n‚úÖ **Immediate Impact**: Start seeing consistent AI output today\n‚úÖ **Team Benefits**: Align everyone to the same standards\n‚úÖ **Long-term Value**: Build institutional knowledge\n\nStop fighting your AI tools‚Äîmake them work for you\n\nüöÄ **Your turn**: Implement your first rule file this week!',
    image: {
      src: 'https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=1920&h=1080&fit=crop&crop=entropy',
      alt: 'Success and transformation concept with upward trending graphs and positive technology imagery',
      aspect: 'wide'
    }
  }
];

export default kssSlides;
